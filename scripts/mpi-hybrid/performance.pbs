#!/bin/bash --login
#
#PBS -N hybrid-multi-gpu
#PBS -q gpu
#PBS -l place=excl
#PBS -l select=2:ncpus=40:ngpus=4
#PBS -l walltime=2:0:0
#PBS -A d167-s1887443
#PBS -o ./
#PBS -e ./

cd $PBS_O_WORKDIR

module load pgi cuda mpt

export OMP_NUM_THREADS=1

EXEC_DIR="../../experiments/mpi-hybrid"
if [ ! -d $EXEC_DIR ];
then
  echo "$EXEC_DIR doesn't exist"
else
  echo "Experiment Directory: $EXEC_DIR"
fi

DATA_DIR="../../data/synthetic"
if [ ! -d $DATA_DIR ];
then
  echo "$DATA_DIR doesn't exist"
else
  echo "Data Directory: $DATA_DIR"
fi

REPS=3
DATAPOINTS="1000000 10000000 100000000"
PROCS=("1" "1" "1" "1" "2" "2")
THREADS=("1" "2" "3" "4" "3" "4")
DIMS="10"
burn="10000"
postburn="10000"
max_lag="499"
infr="0"

cd $EXEC_DIR

for N in $DATAPOINTS
do
  for dim in $DIMS
  do
    for i in `seq -w 0 $((${#PROCS[@]}-1))`
    do
      for k in `seq -w 1 $REPS`
      do
        indir="$DATA_DIR/100M_${dim}"
        outdir="./mpi-hybrid-${N}_${dim}_${PROCS[$i]}_${THREADS[$i]}/$k"
        # generate input file for the test
        infile="mpi-hybrid-${N}_${dim}_${PROCS[$i]}_${THREADS[$i]}_${k}.dat"
        outfile="mpi-hybrid-${N}_${dim}_${PROCS[$i]}_${THREADS[$i]}_${k}.txt"
        echo "nprocs        ${PROCS[$i]}" >> $infile
        echo "nthreads      ${THREADS[$i]}" >> $infile
        echo "train_x       $indir/X_train.csv" >> $infile
        echo "train_y       $indir/Y_train.csv" >> $infile
        echo "test_x        $indir/X_test.csv" >> $infile
        echo "test_y        $indir/Y_test.csv" >> $infile
        echo "train_dimx    $dim" >> $infile
        echo "train_dimy    1" >> $infile
        echo "train_N       $N" >> $infile
        echo "test_dimx     $dim" >> $infile
        echo "test_dimy     1" >> $infile
        echo "test_N        10" >> $infile
        echo "data_format   CSV" >> $infile
        echo "algorithm     metropolis" >> $infile
        echo "sample_dim    $dim" >> $infile
        echo "random_init   0" >> $infile
        echo "burn_N        $burn" >> $infile
        echo "postburn_N    $postburn" >> $infile
        echo "kernel        mvn_block" >> $infile
        echo "tune_sd       0" >> $infile
        echo "lhood         logistic_regression" >> $infile
        echo "max_lag       $max_lag" >> $infile
        echo "lag_threshold 0.1" >> $infile
        echo "ess           all" >> $infile
        echo "inference     $infr" >> $infile
        echo "mc_integ      logistic_regression" >> $infile
        echo "freq_burn     100" >> $infile
        echo "freq_postburn 100" >> $infile
        echo "freq_autocorr 2000" >> $infile
        echo "freq_ess      2000" >> $infile
        echo "freq_mc_integ 100" >> $infile
        echo "outdir        $outdir" >> $infile
        echo "random_seed   7361237" >> $infile

        if [ -d $indir ];
        then
          echo "Running ./mcmc.exe for $N points of dim $dim on ${PROCS[$i]} procs each with ${THREADS[$i]} threads"

          mpiexec_mpt -ppn 1 -n ${PROCS[$i]} omplace -nt ${THREADS[$i]} ./mcmc.exe $infile > $outfile

          if [ ! -d $outdir ]
          then
            echo "$outdir doesn't exist. Skipped files."
          else
            mv $infile $outdir/input.dat
            mv $outfile $outdir/out.txt
          fi
        else
          echo "WARNING: $indir doesn't exist. Skipping test."
        fi
      done
    done
  done
done
